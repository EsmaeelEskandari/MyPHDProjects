#include <iostream>
#include <iostream>
#include "TH1F.h"
#include "TCanvas.h"
#include <TStyle.h>
#include "TROOT.h"
#include "TFile.h"
#include "TTree.h"
#include "TBrowser.h"
#include "TH2.h"
#include "TRandom.h"
#include "TEvent.h"
#include "TParticle.h"
//==================================================

void tree1w(){

  //create a tree file tree1.root - create the file, the Tree and a few branches
  TFile f("tree1.root","recreate");
  TTree t1("t1","a simple Tree with simple variables");
  Float_t px, py, pz;
  Double_t random;
  Int_t ev;
  t1.Branch("px",&px,"px/F");
  t1.Branch("py",&py,"py/F");
  t1.Branch("pz",&pz,"pz/F");   t1.Branch("ev",&ev,"ev/I");

  //fill the tree
  for (Int_t i=0; i<10000; i++) {
    gRandom->Rannor(px,py);                             
    pz = px*px + py*py;
    random = gRandom->Rndm();
    ev = i;
    t1.Fill();
  }
  //save the Tree heade; the file will be automatically closed
  //when going out of the function scope
  t1.Write();
}

//void b(){
//TFile * t1 = new TFile::Open("ttbar13TeV.root");
//if (!TClassTable::GetDict("Event")) {
//gSystem->Load("$ROOTSYS/test/libEvent.so");
//}
//TH1F *a = (TH1F*) TFile::Open("ttbar13TeV.root")->Get("Particle.Px");
//TTree *tr = (TTree*)t1->Get("LHEF");
//TH1F* pt1     =  (TH1F*)t1->Get("Particle.Px");
//a->Draw();
// ================== plot them: 
//TCanvas *c1 =new TCanvas("c1","Title",63,44,600,630);
//c1->Update();
//c1->Clear();
//pt1->Draw("eP");
//}
